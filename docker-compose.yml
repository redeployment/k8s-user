version: '3'
services:

    # consul:
    #
    #
    #     build:
    #         context: ./
    #         dockerfile: ./consul/Dockerfile
    #     image: consul:1.4.4
    #
    #     # command: agent -ui -rejoin -retry-join ${CONSUL_SERVER} -retry-max 10 -retry-interval 10s  -node=service-agent-${SERVICE_NAME}
    #     command: [
    #         'agent',
    #         '-ui',
    #         '-rejoin',
    #         '-retry-join',
    #         '${CONSUL_SERVER}',
    #         '-retry-max',
    #         '10',
    #         '-retry-interval',
    #         '10s',
    #         '-advertise=${CONSUL_CLIENT}',
    #         '-node=service-agent-${SERVICE_NAME}'
    #       ]
    #     # entrypoint:
    #
    #     networks:
    #         - app_net
    #
    #     expose:
    #         - 53
    #         - 8300
    #         - 8301
    #         - 8302
    #         - 8400
    #         - 8500
    #     ports:
    #         - 53:53
    #         - 8300:8300
    #         - 8301:8301
    #         - 8302:8302
    #         - 8400:8400
    #         - 8500:8500
    #         - 8600:8600
    #         - 53:53/udp
    #         - 8301:8301/udp
    #         - 8302:8302/udp
    #
    #     # dns:
    #         # - 127.0.0.1
    #     # network_mode: host
    #     volumes:
    #         - "./consul/consul.d/data:/consul/data"
    #         # - "${PROJECT_LOCATION}/${PROJEC T_NAME}/${SERVICE_NAME}:/var/www/html"
    #         - projectFolder:/var/www/html
    #     environment:
    #         # - CONSUL_BIND_ADDRESS=${CONSUsL_CLIENT}
    #         # - CONSUL_CLIENT_ADDRESS=${CONSUL_sCLIENT}
    #         - CONSUL_BIND_INTERFACE=eth0
    #         - CONSUL_CLIENT_INTERFACE=eth0
    #         - CONSUL_LOCAL_CONFIG={"leave_on_terminate":true}
    #
    #     container_name: "${SERVICE_NAME}-consul"


    app:
        build: ./app
            # context: ./
            # dockerfile: ./php-fpm/Dockerfile
            # dockerfile: php-fpm/Dockerfile-1

        image: service-${SERVICE_NAME}-app
        volumes:
            # - "${PROJECT_LOCATION}/${PROJECT_NAME}/${SERVICE_NAME}:/var/www/html"
            - projectFolder:/var/www/html
        networks:
            - app_net
        container_name: "${SERVICE_NAME}-app"
        tty: true

    nginx:
        build: ./nginx
        image: nginx:stable
        ports:
            - "${SERVICE_WEB_PORT}:80"
        depends_on:
            - php
            # - consul
        environment:
            - BACKEND=nginx
            - CONSUL=consul
        volumes:
            - "./nginx/conf.d:/etc/nginx/conf.d"
            - "./nginx/log:/var/log/nginx"
            # - "${PROJECT_LOCATION}/${PROJECT_NAME}/${SERVICE_NAME}:/usr/share/nginx/html"
            - projectFolder:/var/www/html
        networks:
            - app_net
        container_name: "${SERVICE_NAME}-nginx"


    php:
        build: ./php-fpm
            # context: ./
            # dockerfile: ./php-fpm/Dockerfile
            # dockerfile: php-fpm/Dockerfile-1

        image: php:7.3-fpm
        depends_on:
            # - consul
            - app
            # - redis
        links:
            # - consul
            - app
            # - redis
        environment:
            - BACKEND=php
            - CONSUL=consul
            # - DATABASE_LOGIN=${DATABASE_LOGIN}
            # - DATABASE_HOST=${DATABASE_HOST}
            # - DATABASE_PORT=${DATABASE_PORT}
        ports:
            - "${SERVICE_FPM_PORT}:9000"
        volumes:
            # - "${PROJECT_LOCATION}/${PROJECT_NAME}/${SERVICE_NAME}:/var/www/html"
            - projectFolder:/var/www/html
            - "~/.ssh:/root/.ssh"
        networks:
            - app_net
        container_name: "${SERVICE_NAME}-php"
        # command: ['&&', "/usr/local/bin/ssh.sh"]
        # command: ["/usr/bin/ssh", "-fNg", "-L", "3306:127.0.0.1:3306", "root@47.101.202.230"]
        # entrypoint: ["/usr/local/bin/ssh.sh"]
        # entrypoint: ssh -fNg -L 3306:127.0.0.1:3306 root@47.101.202.230

    mysql:
        image: mysql:latest
        command: --default-authentication-plugin=mysql_native_password
        container_name: '${SERVICE_NAME}-mysql'
        ports:
          - ${DATABASE_PORT}:3306
        networks:
            - app_net
        # volumes:
        #   - ./mysql/data:/data
        environment:
          MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
          MYSQL_DATABASE: ${PROJECT_NAME}
        restart: always

    redis:
        image: redis:latest
        container_name: '${SERVICE_NAME}-redis'
        ports:
          - ${SERVICE_RDS_PORT}:6379
        networks:
            - app_net
        volumes:
          - ./redis/data:/data
        restart: always




networks:
    # 配置docker network
    app_net:
      driver: bridge


#Volumes
volumes:
    projectFolder:
      driver: local
